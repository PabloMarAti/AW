var connection = require("Conexion");
var leerPartidas = require("./LeerPartidas");

module.exports = RolTurno;

//Funcion que da roles y turno
function RolTurno(partida, callback) {
    var conexion = connection.getConexion();
    if (callback === undefined) {
        callback = function () {};
    }
    conexion.connect(function (err) {
        if (!err) {
            leerPartidas.PartidaActual(partida, function (err, DatosPartida) {
                if (!err) {
                    var len = DatosPartida.length;
                    var turno = Math.floor(Math.random() * len);
                    var saboteador = turno;
                    while (saboteador === turno) {
                        saboteador = Math.floor(Math.random() * len);
                    }
                    
                    sql = "update partidas " +
                            "set Turno = ? " +
                            "where ID = ?;";

                    conexion.query(sql, [DatosPartida[turno].Nombre_Usuario, DatosPartida[0].game], function (err, resultado) {
                        if (!err) {
                            if (DatosPartida.length < 5) {
                                sql = "update juega " +
                                        "set Rol = 'saboteador' " +
                                        "where ID_Usuario = ? and ID_Partida = ?;";
                                conexion.query(sql, [DatosPartida[saboteador].user, DatosPartida[0].game], function (err, resultado) {
                                    if (!err) {
                                        sql = "update juega " +
                                                "set Rol = 'buscador' " +
                                                "where Rol is NULL and ID_Partida = ?;";
                                        conexion.query(sql, [DatosPartida[0].game], function (err, resultado) {
                                            if (!err) {
                                                callback(null, true);
                                            } else {
                                                callback(err);
                                            }
                                            conexion.end();
                                        });
                                    } else {
                                        callback(err);
                                    }
                                });
                            } else {
                                var saboteador2 = saboteador;
                                while (saboteador2 === saboteador || saboteador2 === turno) {
                                    saboteador2 = Math.floor(Math.random() * len);
                                }
                                sql = "update juega " +
                                        "set Rol = 'saboteador' " +
                                        "where ID_Usuario = ? or ID_Usuario = ? and ID_Partida = ?;";
                                conexion.query(sql, [DatosPartida[saboteador].user, DatosPartida[saboteador2].user, DatosPartida[0].game], function (err, resultado) {
                                    if (!err) {
                                        sql = "update juega " +
                                                "set Rol = 'buscador' " +
                                                "where Rol is NULL and ID_Partida = ?;";
                                        conexion.query(sql, [DatosPartida[0].game], function (err, resultado) {
                                            if (!err) {
                                                callback(null, true);
                                            } else {
                                                callback(err);
                                            }
                                            conexion.end();
                                        });
                                    } else {
                                        callback(err);
                                    }
                                });
                            }
                        } else {
                            callback(err);
                        }
                    });
                } else {
                    callback(err);
                }
            });
        } else {
            callback(err);
        }
    });
}

var connection = require("Conexion");

module.exports = RolTurno;

function RolTurno(IDpartida, max, callback) {
    var conexion = connection.getConexion();
    if (callback === undefined) {
        callback = function () {};
    }
    conexion.connect(function (err) {
        if (err) {
            callback(err);
        } else {
            var sql = "select Nombre_Usuario " +
                    "from juega, usuarios" +
                    "where ID_Partida = '" + IDpartida + "' and juega.ID_Usuario = usuario.ID;";
            conexion.query(sql, function (err, usuarios) {
                if (!err) {
                    var turno = Math.floor(Math.random() * max);
                    var saboteador = Turno;
                    while(saboteador === turno)
                        saboteador = Math.floor(Math.random() * max);
                    sql = "update partidas " +
                          "set Turno = '" + usuarios[turno].ID_Usuario + "' " +
                          "where ID = '" + IDpartida + "';";

                    conexion.query(sql, function (err, resultado) {
                        if (!err) {
                            if (max < 5) {
                                sql = "update juega " +
                                      "set Rol = 'saboteador' " +
                                      "where ID_Usuario = '" + usuarios[saboteador].ID_Usuario + "' and ID_Partida = '" + IDpartida + "';";
                                conexion.query(sql, function (err, resultado) {
                                    if (!err) {
                                        sql = "update juega " +
                                              "set Rol = 'buscador' " +
                                              "where Rol is NULL and ID_Partida = '" + IDpartida + "';";
                                        conexion.query(sql, function (err, resultado) {
                                            if (!err) {
                                                callback(null, resultado);
                                            } else {
                                                callback(err);
                                            }
                                            conexion.end();
                                        });
                                    } else {

                                    }
                                });
                            } else {
                                var saboteador2 = saboteador;
                                while(saboteador2 === saboteador && saboteador2 === turno)
                                    saboteador2 = Math.floor(Math.random() * max);
                                sql = "update juega " +
                                        "set Rol = 'saboteador' " +
                                        "where ID_Usuario = '" + usuarios[saboteador].ID_Usuario + "' and ID_Usuario = '" + usuarios[saboteador2].ID_Usuario + "' and ID_Partida = '" + IDpartida + "';";
                                conexion.query(sql, function (err, resultado) {
                                    if (!err) {
                                        sql = "update juega " +
                                              "set Rol = 'buscador' " +
                                              "where Rol is NULL and ID_Partida = '" + IDpartida + "';";
                                        conexion.query(sql, function (err, resultado) {
                                            if (!err) {
                                                callback(null, resultado);
                                            } else {
                                                callback(err);
                                            }
                                            conexion.end();
                                        });
                                    }
                                });
                            }
                        } else {
                            callback(err);
                        }
                    });
                } else {
                    callback(err);
                }
            });
        }
    });
}
;